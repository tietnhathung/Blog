@model Blog.Models.Blog

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/web_admin/Views/Shared/_Layout.cshtml";
}


<div class="masonry-item">
    <div class="bgc-white p-20 bd">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Thêm mới bài viết</h4>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contents, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        <div id="editorjs">
                        </div>
                        @Html.HiddenFor(model => model.contents)
                        @Html.ValidationMessageFor(model => model.contents, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" value="Thêm mới" class="btn btn-success" />
                        @Html.ActionLink("Quay lại", "Index", "Category", new { }, new { @class = "btn btn-default " })
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section styles {
}

@section scripts {
    @Scripts.Render("~/Areas/web_admin/assets/js/editorjs.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/checklist.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/code.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/delimiter.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/editorjs.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/embed.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/header.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/inline-code.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/link.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/list.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/marker.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/quote.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/simple-image.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/table.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/warning.js")

    <script>
        
        var editor = new EditorJS({
            
            holderId: 'editorjs',
            tools: {
                
                header: {
                    class: Header,
                    inlineToolbar: ['link'],
                    config: {
                        placeholder: 'Header'
                    },
                    shortcut: 'CMD+SHIFT+H'
                },
                image: {
                    class: SimpleImage,
                    inlineToolbar: ['link'],
                },
                list: {
                    class: List,
                    inlineToolbar: true,
                    shortcut: 'CMD+SHIFT+L'
                },
                checklist: {
                    class: Checklist,
                    inlineToolbar: true,
                },
                quote: {
                    class: Quote,
                    inlineToolbar: true,
                    config: {
                        quotePlaceholder: 'Enter a quote',
                        captionPlaceholder: 'Quote\'s author',
                    },
                    shortcut: 'CMD+SHIFT+O'
                },
                warning: Warning,
                marker: {
                    class: Marker,
                    shortcut: 'CMD+SHIFT+M'
                },
                code: {
                    class: CodeTool,
                    shortcut: 'CMD+SHIFT+C'
                },
                delimiter: Delimiter,
                inlineCode: {
                    class: InlineCode,
                    shortcut: 'CMD+SHIFT+C'
                },
                linkTool: LinkTool,
                embed: Embed,
                table: {
                    class: Table,
                    inlineToolbar: true,
                    shortcut: 'CMD+ALT+T'
                },
            },
            data: {
                blocks: [
                    {
                        type: "header",
                        data: {
                            text: "Nhập nội dung ở đây. . . ",
                            level: 2
                        }
                    },
                ]
            },
            
            onChange: function () {
                console.log('something changed');
            }
        });

    </script>
}
