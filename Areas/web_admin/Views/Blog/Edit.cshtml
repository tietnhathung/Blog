@model Blog.Models.Blog

@{
    ViewBag.Title = "Cập nhật bài viết";
    Layout = "~/Areas/web_admin/Views/Shared/_Layout.cshtml";
}


<div class="masonry-item">
    <div class="bgc-white p-20 bd">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Cập nhật bài viết</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-6">
                            <label class="control-label col-md-12" for="categories">Chọn thể loại</label>
                            <div class="col-md-offset-2 col-md-12">
                                <select id="categories" name="categories" multiple="multiple" class="form-control">
                                    @foreach ( var cate in Model.Blog_category)
                                    {
                                    <option value="@cate.Category.ID" selected="selected" >
                                        @cate.Category.name
                                    </option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.thumbnail, htmlAttributes: new { @class = "control-label col-md-12" })
                            <div class="col-md-offset-2 col-md-12">
                                @Html.TextBoxFor(m => m.thumbnail, new { @class = "form-control", @type = "file" })
                                @Html.ValidationMessageFor(model => model.thumbnail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contents, htmlAttributes: new { @class = "control-label col-md-12" })
                    <div class="col-md-12">
                        <div id="editor">
                            @Html.Raw(Model.contents)
                        </div>
                        @Html.HiddenFor(model => model.contents)
                        @Html.ValidationMessageFor(model => model.contents, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        <input type="submit" id="submit" value="Cập nhật" class="btn btn-success" />
                        @Html.ActionLink("Quay lại", "Index", "Blog", new { }, new { @class = "btn btn-default " })
                    </div>
                </div>
            </div>
        }

    </div>

</div>

@section styles {
    @Styles.Render("~/Areas/web_admin/assets/css/select2.min.css")

    <style>
        .ck-editor__editable_inline {
            min-height: 500px;
        }

        input[type=file] {
            padding: 3px !important;
        }
    </style>
}

@section scripts {

    @Scripts.Render("~/Areas/web_admin/assets/js/ckeditor.js")
    @Scripts.Render("~/Areas/web_admin/assets/js/select2.min.js")

    <script>

        $(function () {
            $('#categories').select2({
                placeholder: 'Chọn biến',
                ajax: {
                    url: "/web_admin/Category/SelectCategories",
                    dataType: 'json',
                    method: "GET",
                    delay: 500,
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (value) {
                                return {
                                    text: value.name,
                                    id: value.ID
                                }
                            })
                        };
                    },
                    cache: true
                }
            });



        });

        let editor;
        ClassicEditor
        .create(document.querySelector('#editor'), {

        })
        .then(newEditor => {
            editor = newEditor;
        })
        .catch(error => {
            console.error(error);
        });
        $("#submit").on('click', function () {
            $("#contents").val(editor.getData());
        });
    </script>
}
